version: 2.1

jobs:
  Update-Builder-Container:
    shell: "/bin/bash -euxo pipefail"

    environment:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PROGRESS_NO_TRUNC: 1

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: "Calculate current docker build checksum"
          command: |
            ./scripts/docker_build_checksum.sh > "checksum.current.txt"

      - restore_cache:
          name: "Restore previous docker build checksum from cache"
          keys:
            - cache-v14-nextclade-docker-{{ checksum "checksum.current.txt" }}

      - run:
          name: "Compare current and previous checksum, halt if no changes"
          command: |
            touch checksum.previous.txt
            CHECKSUM_OLD="$(cat checksum.previous.txt)"
            CHECKSUM_NEW="$(cat checksum.current.txt)"

            echo CHECKSUM_OLD=${CHECKSUM_OLD}
            echo CHECKSUM_NEW=${CHECKSUM_NEW}

            if [ "${CHECKSUM_OLD}" == "${CHECKSUM_NEW}" ]; then
              echo "Checksum did not change. Halting the job."
              circleci-agent step halt
            fi

            mv checksum.current.txt checksum.previous.txt
            echo "Checksum changed. Continuing the job."

      - run:
          name: "Build container image"
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

            echo "OSXCROSS_URL=${OSXCROSS_URL}" > ".env"

            ./docker-dev dp

            declare -a TARGETS=(
              "aarch64-apple-darwin"
              "aarch64-unknown-linux-gnu"
              "wasm32-unknown-unknown"
              "x86_64-apple-darwin"
              "x86_64-pc-windows-gnu"
              "x86_64-unknown-linux-gnu"
              "x86_64-unknown-linux-musl"
            )

            for CROSS in "${TARGETS[@]}"; do
              DOCKER_IMAGE_VERSION="$(./scripts/docker_build_checksum.sh)"

              docker pull "nextstrain/nextclade_builder:dev" 2>/dev/null || true >/dev/null
              docker pull "nextstrain/nextclade_builder:dev-${DOCKER_IMAGE_VERSION}" 2>/dev/null || true >/dev/null
              docker pull "nextstrain/nextclade_builder:${CROSS}" 2>/dev/null || true >/dev/null
              docker pull "nextstrain/nextclade_builder:${CROSS}-${DOCKER_IMAGE_VERSION}" 2>/dev/null || true >/dev/null

              CROSS=${CROSS} ./docker-dev dp
            done

      - save_cache:
          name: "Save new checksum.txt to cache"
          key: cache-v14-nextclade-docker-{{ checksum "checksum.previous.txt" }}
          paths:
            - checksum.previous.txt

  Build-Cli:
    parameters:
      target_arch:
        type: string

    shell: "/bin/bash -euxo pipefail"

    environment:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PROGRESS_NO_TRUNC: 1

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: " [ << parameters.target_arch >> ] | Pull docker dev image"
          command: |
            CROSS="<< parameters.target_arch >>"
            DOCKER_IMAGE_VERSION="$(./scripts/docker_build_checksum.sh)"

            docker pull "nextstrain/nextclade_builder:dev" >/dev/null
            docker pull "nextstrain/nextclade_builder:dev-${DOCKER_IMAGE_VERSION}" >/dev/null
            docker pull "nextstrain/nextclade_builder:cross-${CROSS}" >/dev/null
            docker pull "nextstrain/nextclade_builder:cross-${CROSS}-${DOCKER_IMAGE_VERSION}" >/dev/null

      - restore_cache:
          name: " [ << parameters.target_arch >> ] | Restore build cache"
          keys:
            - cache-v14-nextclade-cli-<< parameters.target_arch >>-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}

      - run:
          name: " [ << parameters.target_arch >> ] | Build CLI"
          command: |
            export CROSS="<< parameters.target_arch >>"

            echo "OSXCROSS_URL=${OSXCROSS_URL}" > ".env"
            echo "DATA_FULL_DOMAIN=${DATA_FULL_DOMAIN}" > ".env"

            CROSS=${CROSS} ./docker-dev br

      - save_cache:
          name: " [ << parameters.target_arch >> ] | Save build cache"
          key: cache-v14-nextclade-cli-<< parameters.target_arch >>-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}
          paths:
            - .build
            - .cache

      - store_artifacts:
          name: " [ << parameters.target_arch >> ] | Store build artifacts"
          path: .out

      - persist_to_workspace:
          name: " [ << parameters.target_arch >> ] | Persist build artifacts to workspace"
          root: .
          paths:
            - .out/*

  Release-Cli-Github:
    shell: "/bin/bash -euxo pipefail"

    environment:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PROGRESS_NO_TRUNC: 1

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: small

    steps:
      - checkout

      - run:
          name: "Prepare workspace"
          command: |
            mkdir -p /home/circleci/workspace

      - attach_workspace:
          name: "Attach workspace"
          at: /home/circleci/workspace

      - run:
          name: "Download dependencies"
          command: |
            curl -fsSL "https://github.com/cli/cli/releases/download/v2.10.1/gh_2.10.1_linux_amd64.tar.gz" | tar xz -C "${HOME}/bin" --strip-components=2 gh_2.10.1_linux_amd64/bin/gh
            curl -fsSL "https://github.com/TomWright/dasel/releases/download/v1.24.3/dasel_linux_amd64" -o "${HOME}/bin/dasel" && chmod +x "${HOME}/bin/dasel"
            curl -fsSL "https://github.com/orhun/git-cliff/releases/download/v0.7.0/git-cliff-0.7.0-x86_64-unknown-linux-gnu.tar.gz" | tar -C "${HOME}/bin" --strip-components=1 -xz "git-cliff-0.7.0/git-cliff"
            curl -fsSL "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64" -o ${HOME}/bin/jq && chmod +x ${HOME}/bin/jq

      - run:
          name: "Publish binaries to GitHub Releases"
          command: |
            ./scripts/publish_github \
              --artifacts_dir "/home/circleci/workspace/.out" \
              --user_name "${CIRCLE_PROJECT_USERNAME}" \
              --repo_name "${CIRCLE_PROJECT_REPONAME}" \
              --git_sha "${CIRCLE_SHA1}"

  Release-Cli-Docker:
    shell: "/bin/bash -euxo pipefail"

    environment:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PROGRESS_NO_TRUNC: 1\n

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: small

    steps:
      - checkout

      - run:
          name: "Prepare workspace"
          command: |
            mkdir -p /home/circleci/workspace

      - attach_workspace:
          name: "Attach workspace"
          at: /home/circleci/workspace

      - run:
          name: "Download dependencies"
          command: |
            curl -fsSL "https://github.com/TomWright/dasel/releases/download/v1.24.3/dasel_linux_amd64" -o "${HOME}/bin/dasel"
            chmod +x "${HOME}/bin/dasel"

      - run:
          name: "Build and publish Docker container images to Docker Hub"
          command: |
            pwd
            cp -vr /home/circleci/workspace/.out .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            ./scripts/publish_docker --push

  Build-And-Deploy-Web:
    shell: "/bin/bash -euxo pipefail"

    environment:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      PROGRESS_NO_TRUNC: 1

    machine:
      image: ubuntu-2004:202201-02
      docker_layer_caching: true

    resource_class: large

    steps:
      - checkout

      - run:
          name: " [ web ] | Pull docker dev image (branch << pipeline.git.branch >>)"
          command: |
            CROSS="wasm32-unknown-unknown"
            DOCKER_IMAGE_VERSION="$(./scripts/docker_build_checksum.sh)"

            docker pull "nextstrain/nextclade_builder:dev" >/dev/null
            docker pull "nextstrain/nextclade_builder:dev-${DOCKER_IMAGE_VERSION}" >/dev/null
            docker pull "nextstrain/nextclade_builder:cross-${CROSS}" >/dev/null
            docker pull "nextstrain/nextclade_builder:cross-${CROSS}-${DOCKER_IMAGE_VERSION}" >/dev/null

      - restore_cache:
          name: " [ web ] | Restore build cache (branch << pipeline.git.branch >>)"
          keys:
            - cache-v15-nextclade-wasm-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}-{{ checksum "packages_rs/nextclade-web/Cargo.toml" }}

      - run:
          name: " [ web ] | Build WebAssembly module (branch << pipeline.git.branch >>)"
          command: |
            ./docker-dev Wr

      - save_cache:
          name: " [ web ] | Save build cache (branch << pipeline.git.branch >>)"
          key: cache-v15-nextclade-wasm-{{ checksum "Cargo.toml" }}-{{ checksum "packages_rs/nextclade/Cargo.toml" }}-{{ checksum "packages_rs/nextclade-web/Cargo.toml" }}
          paths:
            - .build
            - .cache
            - packages_rs/nextclade-web/.build/docker

      - restore_cache:
          name: " [ web ] | Restore build cache (branch << pipeline.git.branch >>)"
          keys:
            - cache-v15-nextclade-web-{{ checksum "packages_rs/nextclade-web/yarn.lock" }}

      - run:
          name: " [ web ] | Build web application (branch << pipeline.git.branch >>)"
          command: |
            cp .env.example .env

            sed -i -e "s|DATA_FULL_DOMAIN=https://data.master.clades.nextstrain.org|DATA_FULL_DOMAIN=${DATA_FULL_DOMAIN}|g" .env

            ./docker-dev a yarn install
            ./docker-dev a yarn lint
            ./docker-dev ar

      - save_cache:
          name: " [ web ] | Save build cache (branch << pipeline.git.branch >>)"
          key: cache-v15-nextclade-web-{{ checksum "packages_rs/nextclade-web/yarn.lock" }}
          paths:
            - packages_rs/nextclade-web/.build/production/tmp/cache
            - packages_rs/nextclade-web/.cache
            - packages_rs/nextclade-web/node_modules

      - run:
          name: " [ web ] | Halt if not on a major branch (branch << pipeline.git.branch >>)"
          command: |
            if ! [[ "$CIRCLE_BRANCH" =~ ^(master|staging|release)$ ]]; then circleci-agent step halt; fi

      - run:
          name: " [ web ] | Clear AWS S3 bucket (branch << pipeline.git.branch >>)"
          command: |
            aws s3 rm s3://${AWS_S3_BUCKET} --recursive

      - run:
          name: " [ web ] | Deploy web bundle to AWS S3 (branch << pipeline.git.branch >>)"
          command: |
            cd packages_rs/nextclade-web/.build/production/web
            aws s3 cp --recursive --cache-control "max-age=2592000, public" "_next/" "s3://${AWS_S3_BUCKET}/_next/"

      - run:
          name: " [ web ] | Deploy web root to AWS S3 (branch << pipeline.git.branch >>)"
          command: |
            cd packages_rs/nextclade-web/.build/production/web
            aws s3 cp --recursive --exclude "_next" --exclude "*.html" "./" "s3://${AWS_S3_BUCKET}/"

      - run:
          name: " [ web ] | Deploy html files to AWS S3 (branch << pipeline.git.branch >>)"
          command: |
            cd packages_rs/nextclade-web/.build/production/web
            find * -type f -name "*.html" -exec bash -c '\
            aws s3 cp \
              --content-type "text/html" \
              --cache-control "no-cache" \
              --metadata-directive REPLACE \
                $1 \
                s3://${AWS_S3_BUCKET}/${1}' \
            - "{}" \;

      - run:
          name: " [ web ] | Invalidate AWS Cloudfront cache (branch << pipeline.git.branch >>)"
          command: |
            aws cloudfront create-invalidation \
              --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
              --paths "/*"

      - run:
          name: " [ web ] | Create and push git tag"
          command: |
            curl -fsSL "https://github.com/cli/cli/releases/download/v2.10.1/gh_2.10.1_linux_amd64.tar.gz" | tar xz -C "${HOME}/bin" --strip-components=2 gh_2.10.1_linux_amd64/bin/gh

            gh auth setup-git

            git config user.email "nextstrainbot@nextstrain.org"
            git config user.name "nextstrain-bot"

            cd packages_rs/nextclade-web

            export version=$(node -e "\
              const semver = require('semver'); \
              const pkg = require('./package.json'); \
              console.log(pkg.version) \
            ")

            git tag "web-${version}"
            git push origin "web-${version}"

cli_branches: &cli_branches
  filters:
    branches:
      only:
        - staging-cli
        - release-cli

web_branches: &web_branches
  filters:
    branches:
      only:
        - master
        - staging
        - release

web_branches_and_cli_branches: &web_branches_and_cli_branches
  filters:
    branches:
      only:
        - master
        - staging
        - release
        - release-cli
        - staging-cli

workflows:
  version: 2
  build:
    jobs:
      - Update-Builder-Container:
          <<: *web_branches_and_cli_branches

          context:
            - nextclade_macos

      - Build-Cli:
          <<: *cli_branches

          requires:
            - Update-Builder-Container

          context:
            - nextclade_macos
            - nextclade_cli_<< pipeline.git.branch >>

          matrix:
            parameters:
              target_arch:
                - x86_64-apple-darwin
                - aarch64-apple-darwin
                - x86_64-unknown-linux-gnu
                - x86_64-pc-windows-gnu
                - aarch64-unknown-linux-gnu
                - x86_64-unknown-linux-musl

      - Release-Cli-Github:
          <<: *cli_branches

          context:
            - nextclade_github

          requires:
            - Build-Cli-x86_64-apple-darwin
            - Build-Cli-aarch64-apple-darwin
            - Build-Cli-x86_64-unknown-linux-gnu
            - Build-Cli-x86_64-pc-windows-gnu
            - Build-Cli-aarch64-unknown-linux-gnu
            - Build-Cli-x86_64-unknown-linux-musl

      - Release-Cli-Docker:
          <<: *cli_branches

          context:
            - nextclade_github

          requires:
            - Build-Cli-x86_64-unknown-linux-gnu
            - Build-Cli-x86_64-unknown-linux-musl

      - Build-And-Deploy-Web:
          <<: *web_branches

          context:
            - nextclade_github
            - nextclade_web_<< pipeline.git.branch >>

          requires:
            - Update-Builder-Container
